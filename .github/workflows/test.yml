name: VALIS Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: valis_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-xdist
    
    - name: Set up test environment
      env:
        VALIS_DB_HOST: localhost
        VALIS_DB_PORT: 5432
        VALIS_DB_NAME: valis_test
        VALIS_DB_USER: postgres
        VALIS_DB_PASSWORD: postgres
        VALIS_SECRET_KEY: test_secret_key_for_ci_only
        VALIS_API_TOKEN: test_api_token_for_ci
        VALIS_ENV: testing
      run: |
        # Create test database schema
        export PGPASSWORD=postgres
        psql -h localhost -U postgres -d valis_test -f memory/synthetic_cognition_schema.sql || true
    
    - name: Run unit tests
      env:
        VALIS_DB_HOST: localhost
        VALIS_DB_PORT: 5432
        VALIS_DB_NAME: valis_test
        VALIS_DB_USER: postgres
        VALIS_DB_PASSWORD: postgres
        VALIS_SECRET_KEY: test_secret_key_for_ci_only
        VALIS_API_TOKEN: test_api_token_for_ci
        VALIS_ENV: testing
      run: |
        pytest -v --tb=short --cov=agents --cov=memory --cov=core \
               --cov-report=xml --cov-report=term-missing \
               --cov-fail-under=25 \
               -m "not slow" \
               tests/
    
    - name: Run integration tests
      env:
        VALIS_DB_HOST: localhost
        VALIS_DB_PORT: 5432
        VALIS_DB_NAME: valis_test
        VALIS_DB_USER: postgres
        VALIS_DB_PASSWORD: postgres
        VALIS_SECRET_KEY: test_secret_key_for_ci_only
        VALIS_API_TOKEN: test_api_token_for_ci
        VALIS_ENV: testing
      run: |
        pytest -v --tb=short -m "slow" tests/ || echo "Integration tests failed but continuing..."
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
